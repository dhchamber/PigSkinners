"""
Django settings for PigSkinners project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from decouple import config, Csv
import logging.config

# https://github.com/tornadoweb/tornado/issues/2751
import sys
import asyncio

# per issue listed above this is needed to run tornado, a component of flower, on windows
if sys.platform == 'win32':
    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)
ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())

# Application definition
INSTALLED_APPS = [
    'chat',             # https://channels.readthedocs.io/en/latest/tutorial/part_1.html
    'grappelli',        # https://django-grappelli.readthedocs.io/en/latest/quickstart.html#installation
    'django.contrib.admin',
    'django.contrib.auth',  # Core authentication framework and its default models
    'django.contrib.contenttypes',  # Django content type system (allows permissions to be associated with models)
    'django.contrib.sessions',  # django session management, session values
    'django.contrib.messages',  # django messages in request to return errors
    'django.contrib.staticfiles',
    'django_extensions',
    # 'debug_toolbar',
    'werkzeug',
    'django_tables2',  # https://django-tables2.readthedocs.io/en/latest/pages/filtering.html
    'django_filters',  # https://pypi.org/project/django-filter/
    'bootstrap3',  # https://django-bootstrap3.readthedocs.io/en/latest/installation.html
    'crispy_forms',
    'background_task',  # https://django-background-tasks.readthedocs.io/en/latest/
    'hijack',  # https://django-hijack.readthedocs.io/en/stable/
    'compat',
    'hijack_admin',  # https://github.com/arteria/django-hijack-admin
    'django_celery_beat',  # https://github.com/celery/django-celery-beat
    # 'flower',
    # 'rest_framework',
    'channels',  # https://medium.com/@9cv9official/simple-chat-app-using-django-channel-ed5032b79b9c
    # https://realpython.com/getting-started-with-django-channels/
    # https://channels.readthedocs.io/en/latest/tutorial/part_1.html
    'appmain',
]

# https://channels.readthedocs.io/en/latest/tutorial/part_1.html
ASGI_APPLICATION = 'PigSkinners.routing.application'

# https://medium.com/@9cv9official/simple-chat-app-using-django-channel-ed5032b79b9c
# https://realpython.com/getting-started-with-django-channels/
CHANNEL_LAYERS = {
     'default': {
         'BACKEND': 'channels_redis.core.RedisChannelLayer',
         'CONFIG': {
             'hosts': [('localhost', 6379)],  # redis_host
         },
     },
 }

logging.config.dictConfig({
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'console': {
            'format': '%(name)-12s %(levelname)-8s %(lineno)d %(message)s'
        },
        'file': {
            'format': '%(asctime)s %(name)-12s %(lineno)d %(levelname)-8s %(message)s'
        }
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'console'
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'formatter': 'file',
            'filename': 'debug.log'
        }
    },
    'loggers': {
        'django.request': {
            'level': 'DEBUG',
            'propagate': True,
            'handlers': ['console', 'file'],
        },
        '': {
            'level': 'DEBUG',
            'handlers': ['console', 'file'],
        },
    },
})

CRISPY_TEMPLATE_PACK = 'bootstrap4'

EMAIL_BACKEND = config('EMAIL_BACKEND')
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_USE_TLS = config('EMAIL_USE_TLS', cast=bool)
EMAIL_PORT = config('EMAIL_PORT', cast=int)
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',  # Manages sessions across requests
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Associates users with requests using sessions
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'PigSkinners.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
            ],
        },
    },
]

WSGI_APPLICATION = 'PigSkinners.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

# for sqlite database
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

# for PostgresSql database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DATABASENAME'),
        'USER': config('DATABASEUSER'),
        'PASSWORD': config('DATABASEPWD'),
        'HOST': config('DATABASEHOST'),
        'PORT': '',
    }
}

# Password validation - these can be removed in dev if needed
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# https://django-grappelli.readthedocs.io/en/latest/customization.html
#  Django Grappelli Settings
GRAPPELLI_ADMIN_TITLE = 'PigSkinners Administration'
GRAPPELLI_SWITCH_USER = True

# https://django-hijack.readthedocs.io/en/stable/
# Django-Hijack
HIJACK_LOGIN_REDIRECT_URL = '/ps_home/'  # Where admins are redirected to after hijacking a user
HIJACK_LOGOUT_REDIRECT_URL = '/ps_home/'  # Where admins are redirected to after releasing a user
HIJACK_ALLOW_GET_REQUESTS = True

# celery
BROKER_URL = 'redis://localhost:6379'
CELERY_RESULT_BACKEND = 'redis://localhost:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_SERIALIZER = 'json'
CELERY_TIMEZONE = 'America/Denver'
# http://docs.celeryproject.org/en/latest/userguide/configuration.html#task-time-limit
CELERY_TASK_TRACK_STARTED = True

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "PigSkinners/static")

# login tutorial
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'login'
